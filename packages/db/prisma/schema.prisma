// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model ContactForm {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  email     String
  message   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([email])
  @@index([name])
  @@index([createdAt])
}

model Post {
  id            String  @id @default(auto()) @map("_id") @db.ObjectId
  title         String
  content       String
  featureImage  String?
  postUrl       String   @unique
  publishDate   DateTime?
  tags          TagOnPost[]
  excerpt       String?
  authorId      String   @db.ObjectId
  author        Author   @relation(fields: [authorId], references: [id])
  featured      Boolean  @default(false)
  metaData      MetaData?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  status        PostStatus @default(DRAFT)

  @@index([featured])
  @@index([publishDate])
  @@index([status])
  @@index([title])
  @@index([createdAt])
  @@index([updatedAt])
}

enum PostStatus {
  DRAFT
  PUBLISHED
  SCHEDULED
  ARCHIVED
  DELETED
}

model MetaData {
  id           String  @id @default(auto()) @map("_id") @db.ObjectId
  postId       String  @unique @db.ObjectId
  post         Post    @relation(fields: [postId], references: [id])
  title        String?
  description  String?
  imageUrl     String?
  keywords     String?
  authorName   String?
  canonicalUrl String?
  ogTitle      String?
  ogDescription String?
  ogImage      String?
  twitterCard  String?
  twitterTitle String?
  twitterDescription String?
  twitterImage String?
}

model Tag {
  id    String @id @default(auto()) @map("_id") @db.ObjectId
  slug  String @unique
  description String?
  imageUrl String?
  posts TagOnPost[]
}

model TagOnPost {
  id     String @id @default(auto()) @map("_id") @db.ObjectId
  post   Post   @relation(fields: [postId], references: [id])
  postId String @db.ObjectId
  tag    Tag    @relation(fields: [tagId], references: [id])
  tagId  String @db.ObjectId

  @@index([postId])
  @@index([tagId])
}

model Author {
  id      String @id @default(auto()) @map("_id") @db.ObjectId
  clerkId String @unique
  name    String
  email   String @unique
  imageUrl String?
  posts   Post[]
  role    Role

  @@index([name])
  @@index([role])
}

enum Role {
  ADMIN
  OWNER
  WRITER
}

model Member {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String?
  email     String  @unique
  note      String?
  subscribed Boolean @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([name])
  @@index([createdAt])
  @@index([updatedAt])
}

